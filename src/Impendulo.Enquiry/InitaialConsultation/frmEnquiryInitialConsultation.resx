<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wH8BeqYvXP47oLgAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.BackImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wH8BeqYvXP47oLgAAAAASUVORK5CYII=
</value>
  </data>
</root>